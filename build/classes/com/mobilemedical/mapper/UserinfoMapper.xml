<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.mobilemedical.mapper.UserinfoMapper" >
  <resultMap id="BaseResultMap" type="com.mobilemedical.model.Userinfo" >
    <id column="userinfo_id" property="userinfoId" jdbcType="INTEGER" />
    <result column="usergroup_id" property="usergroupId" jdbcType="INTEGER" />
    <result column="idcode" property="idcode" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="username" property="username" jdbcType="VARCHAR" />
    <result column="sex" property="sex" jdbcType="INTEGER" />
    <result column="deleted" property="deleted" jdbcType="INTEGER" />
    <result column="isadmin" property="isadmin" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    userinfo_id, usergroup_id, idcode, password, username, sex
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from userinfo
    where userinfo_id = #{userinfoId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from userinfo
    where userinfo_id = #{userinfoId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.mobilemedical.model.Userinfo" >
    insert into userinfo (userinfo_id, usergroup_id, idcode, 
      password, username, sex
      )
    values (#{userinfoId,jdbcType=INTEGER}, #{usergroupId,jdbcType=INTEGER}, #{idcode,jdbcType=VARCHAR}, 
      #{password,jdbcType=VARCHAR}, #{username,jdbcType=VARCHAR}, #{sex,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.mobilemedical.model.Userinfo" >
    insert into userinfo
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="userinfoId != null" >
        userinfo_id,
      </if>
      <if test="usergroupId != null" >
        usergroup_id,
      </if>
      <if test="idcode != null" >
        idcode,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="username != null" >
        username,
      </if>
      <if test="sex != null" >
        sex,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="userinfoId != null" >
        #{userinfoId,jdbcType=INTEGER},
      </if>
      <if test="usergroupId != null" >
        #{usergroupId,jdbcType=INTEGER},
      </if>
      <if test="idcode != null" >
        #{idcode,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="username != null" >
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        #{sex,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.mobilemedical.model.Userinfo" >
    update userinfo
    <set >
      <if test="usergroupId != null" >
        usergroup_id = #{usergroupId,jdbcType=INTEGER},
      </if>
      <if test="idcode != null" >
        idcode = #{idcode,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="username != null" >
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        sex = #{sex,jdbcType=INTEGER},
      </if>
    </set>
    where userinfo_id = #{userinfoId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.mobilemedical.model.Userinfo" >
    update userinfo
    set usergroup_id = #{usergroupId,jdbcType=INTEGER},
      idcode = #{idcode,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      username = #{username,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=INTEGER}
    where userinfo_id = #{userinfoId,jdbcType=INTEGER}
  </update>
  <select id="findByIdCode" resultMap="BaseResultMap" >
     select * from userinfo where idcode = #{idcode}
  </select>
   <select id="selectTotal" resultType="Integer">
     select count(*) from userinfo where deleted = 0
   </select>
   <select id="selectList" resultMap="BaseResultMap" >
     select * from userinfo  where deleted = 0 order by userinfo_id desc
   </select>
   <update id="updateStatus">
       update  userinfo set deleted = #{status} where userinfo_id = #{id}
   </update>
   <select id="getByGroupid" resultMap="BaseResultMap" >
       select * from userinfo where deleted = 0 and usergroup_id = #{usergroupId}
   </select>

</mapper>